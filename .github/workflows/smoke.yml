name: Smoke
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ main ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Apex front door
        run: |
          set -euo pipefail
          code=$(curl -sS -o /dev/null -w '%{http_code}' https://dhkalign.com)
          echo "apex HTTP $code"
          [ "$code" = "200" ] || { echo "Expected 200, got $code"; exit 1; }

      - name: www redirects to apex
        run: |
          set -euo pipefail
          code=$(curl -sSI -o /dev/null -w '%{http_code}' "https://www.dhkalign.com/test?q=1")
          echo "www redirect HTTP $code"
          [ "$code" = "301" ] || { echo "Expected 301, got $code"; exit 1; }

      - name: Edge version (CI-safe, backend fallback)
        run: |
          set -euo pipefail
          UA="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 Chrome/124 Safari/537.36"
          curl_edge() {
            curl -sS --retry 2 --retry-all-errors -A "$UA" -H 'accept: application/json' \
                 -o edge.json -w '%{http_code}' https://edge.dhkalign.com/version || true
          }
          curl_backend() {
            curl -sS --retry 2 --retry-all-errors -H 'accept: application/json' \
                 -o backend.json -w '%{http_code}' https://backend.dhkalign.com/version || true
          }
          has_sha_file() {
            F="$1"
            if jq -e . >/dev/null 2>&1 <"$F"; then
              jq -e '( .sha? // .commit? // .version? // empty | tostring | test("^[0-9a-fA-F]{7,40}$") )
                      or ( .. | scalars | tostring | test("^[0-9a-fA-F]{7,40}$") )' <"$F"
            else
              grep -Eq '[0-9a-fA-F]{7,40}' "$F" || { echo "No SHA-like string in $F"; exit 1; }
            fi
          }
          CODE=$(curl_edge)
          echo "--- edge /version ($CODE) ---"
          jq . < edge.json || cat edge.json || true
          if [ "$CODE" = "200" ]; then
            has_sha_file edge.json
          else
            echo "Edge non-200 ($CODE) â€” fallback to backend /version"
            CODE_B=$(curl_backend)
            echo "--- backend /version ($CODE_B) ---"
            jq . < backend.json || cat backend.json || true
            [ "$CODE_B" = "200" ] || { echo "backend /version non-200: $CODE_B"; exit 1; }
            has_sha_file backend.json
          fi

      - name: Backend health
        run: |
          set -euo pipefail
          curl -fsS https://backend.dhkalign.com/health | jq -e '(.status?=="ok") or (.ok?==true)'

      - name: Free translate #1
        run: |
          set -euo pipefail
          OUT="$(curl -fsS --get "https://edge.dhkalign.com/api/translate" --data-urlencode "q=Rickshaw pabo na")"
          echo "$OUT" | jq . || true
          echo "$OUT" | jq -e 'has("translation") or has("output") or has("result") or has("data")'

      - name: Free translate #2
        run: |
          set -euo pipefail
          curl -fsS --get "https://edge.dhkalign.com/api/translate" --data-urlencode "q=Rickshaw pabo na" \
          | jq -e 'has("translation") or has("output") or has("result") or has("data")'
