# DHK Align Backend Environment Configuration
# Copy this file to .env and configure for your environment
# üîê KEEP THIS FILE SECURE - Contains sensitive configuration

# =============================================================================
# Application Configuration
# =============================================================================

# Application settings
APP_NAME=DHK Align Backend
APP_VERSION=1.0.0
APP_DESCRIPTION="Privacy-first Banglish translation API"

# Environment (development, staging, production)
ENVIRONMENT=development

# Server configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1

# Debug mode (NEVER enable in production)
DEBUG=true

# =============================================================================
# Security Configuration
# =============================================================================

# Secret key for JWT tokens and encryption (CHANGE IN PRODUCTION)
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT configuration
JWT_SECRET_KEY=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_EXPIRY_MINUTES=30
JWT_REFRESH_EXPIRY_DAYS=7

# Admin credentials (for admin dashboard access)
ADMIN_EMAIL=admin@dhkalign.com
ADMIN_PASSWORD_HASH=$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewfGmj7x2YXwKM3G

# Encryption key for sensitive data
ENCRYPTION_KEY=your-encryption-key-32-characters

# =============================================================================
# Database Configuration
# =============================================================================

# Primary database URL
DATABASE_URL=postgresql://username:password@localhost:5432/dhkalign

# Database pool settings
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_TIMEOUT=30

# SQLite for development (comment out if using PostgreSQL)
# DATABASE_URL=sqlite:///./dhkalign.db

# Database connection encryption
DATABASE_SSL_MODE=prefer

# =============================================================================
# Redis Configuration
# =============================================================================

# Redis URL for caching and rate limiting
REDIS_URL=redis://localhost:6379/0

# Redis password (if required)
REDIS_PASSWORD=

# Redis connection pool settings
REDIS_POOL_SIZE=10
REDIS_SOCKET_TIMEOUT=5

# Cache TTL settings (in seconds)
CACHE_TTL_SHORT=300      # 5 minutes
CACHE_TTL_MEDIUM=3600    # 1 hour
CACHE_TTL_LONG=86400     # 24 hours

# =============================================================================
# CORS Configuration
# =============================================================================

# Allowed origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,https://dhkalign.com,https://www.dhkalign.com

# Allow credentials
ALLOW_CREDENTIALS=true

# Allowed methods
ALLOWED_METHODS=GET,POST,PUT,DELETE

# Allowed headers
ALLOWED_HEADERS=*

# =============================================================================
# Rate Limiting Configuration
# =============================================================================

# Enable rate limiting
RATE_LIMIT_ENABLED=true

# Default rate limits (requests per window)
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Tier-specific rate limits (requests per day)
RATE_LIMIT_FREE=5
RATE_LIMIT_PRO=10000
RATE_LIMIT_LIFETIME=10000
RATE_LIMIT_ADMIN=100000

# Rate limit storage backend (redis, memory)
RATE_LIMIT_STORAGE=redis

# =============================================================================
# Payment Configuration
# =============================================================================

# Stripe configuration
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# Stripe price IDs
STRIPE_PRICE_PRO=price_your_pro_price_id
STRIPE_PRICE_LIFETIME=price_your_lifetime_price_id

# BTCPay Server configuration
BTCPAY_URL=https://btcpay.dhkalign.com
BTCPAY_STORE_ID=your_store_id_here
BTCPAY_API_KEY=your_btcpay_api_key_here
BTCPAY_WEBHOOK_SECRET=your_btcpay_webhook_secret

# Payment webhook URLs
STRIPE_WEBHOOK_URL=/webhooks/stripe
BTCPAY_WEBHOOK_URL=/webhooks/btcpay

# =============================================================================
# Email Configuration
# =============================================================================

# SMTP settings for sending emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_TLS=true
SMTP_SSL=false

# Email addresses
FROM_EMAIL=admin@dhkalign.com
SUPPORT_EMAIL=info@dhkalign.com

# Email templates
EMAIL_TEMPLATE_DIR=templates/emails

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log directory
LOG_DIR=logs

# Log file rotation
LOG_MAX_SIZE=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Structured logging format (json, text)
LOG_FORMAT=json

# Enable request logging
LOG_REQUESTS=true

# Log SQL queries (development only)
LOG_SQL_QUERIES=false

# =============================================================================
# Monitoring & Analytics
# =============================================================================

# Sentry DSN for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Enable metrics collection
METRICS_ENABLED=true

# Metrics backend (prometheus, statsd, none)
METRICS_BACKEND=none

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_TIMEOUT=30

# =============================================================================
# Translation Engine Configuration
# =============================================================================

# Translation data file paths
TRANSLATION_DATA_FILE=app/data/translations.json
SLANG_DATA_FILE=app/data/slang.json
COMPOUND_RULES_FILE=app/data/compound_rules.json

# Engine performance settings
TRANSLATION_CACHE_SIZE=1000
TRANSLATION_TIMEOUT=5.0
ENABLE_FUZZY_MATCHING=true
FUZZY_THRESHOLD=0.8

# Machine learning model paths (if applicable)
ML_MODEL_PATH=models/
ENABLE_ML_CONTEXT=false

# =============================================================================
# File Storage Configuration
# =============================================================================

# Local file storage
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760  # 10MB

# AWS S3 configuration (optional)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=dhkalign-files

# =============================================================================
# External API Configuration
# =============================================================================

# Google Translate API (fallback)
GOOGLE_TRANSLATE_API_KEY=your_google_api_key

# OpenAI API (for ML features)
OPENAI_API_KEY=sk-your_openai_api_key

# Other external services
EXTERNAL_API_TIMEOUT=10.0
EXTERNAL_API_RETRIES=3

# =============================================================================
# Backup Configuration
# =============================================================================

# Database backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Backup storage
BACKUP_LOCAL_DIR=backups
BACKUP_S3_BUCKET=dhkalign-backups

# =============================================================================
# Development Configuration
# =============================================================================

# Development-specific settings
RELOAD_ON_CHANGE=true
ENABLE_CORS_ALL=true
MOCK_EXTERNAL_APIS=false

# Testing configuration
TEST_DATABASE_URL=sqlite:///:memory:
TEST_REDIS_URL=redis://localhost:6379/1

# Debug tools
ENABLE_SQL_ECHO=false
ENABLE_PROFILING=false

# =============================================================================
# Production Configuration
# =============================================================================

# Production-specific settings (uncomment for production)
# DEBUG=false
# LOG_LEVEL=WARNING
# ENABLE_CORS_ALL=false
# RELOAD_ON_CHANGE=false

# Security headers
ENABLE_SECURITY_HEADERS=true
FORCE_HTTPS=false

# Performance settings
ENABLE_GZIP=true
ENABLE_STATIC_FILE_CACHING=true

# =============================================================================
# Admin Dashboard Configuration
# =============================================================================

# Admin dashboard settings
ADMIN_DASHBOARD_ENABLED=true
ADMIN_DASHBOARD_URL=/admin
ADMIN_SESSION_TIMEOUT=3600  # 1 hour

# Admin features
ENABLE_USER_MANAGEMENT=true
ENABLE_ANALYTICS_DASHBOARD=true
ENABLE_SYSTEM_MONITORING=true

# =============================================================================
# Webhook Configuration
# =============================================================================

# Webhook settings
WEBHOOK_TIMEOUT=30
WEBHOOK_RETRIES=3
WEBHOOK_RETRY_DELAY=5

# Webhook verification
VERIFY_WEBHOOK_SIGNATURES=true

# =============================================================================
# API Documentation
# =============================================================================

# OpenAPI documentation
API_DOCS_ENABLED=true
API_DOCS_URL=/docs
API_REDOC_URL=/redoc

# API versioning
API_VERSION=v1
API_PREFIX=/api/v1

# =============================================================================
# Queue Configuration (if using background tasks)
# =============================================================================

# Celery configuration (optional)
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Background task settings
ENABLE_BACKGROUND_TASKS=false
TASK_QUEUE=default

# =============================================================================
# Feature Flags
# =============================================================================

# Feature toggles
ENABLE_USER_REGISTRATION=true
ENABLE_PASSWORD_RESET=true
ENABLE_EMAIL_VERIFICATION=false
ENABLE_TWO_FACTOR_AUTH=false

# Experimental features
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_BETA_FEATURES=false

# =============================================================================
# Compliance & Legal
# =============================================================================

# GDPR compliance
ENABLE_GDPR_COMPLIANCE=true
DATA_RETENTION_DAYS=2555  # 7 years

# Privacy settings
ENABLE_ANONYMOUS_ANALYTICS=true
ENABLE_USER_TRACKING=false

# Terms of service
TOS_VERSION=1.0
PRIVACY_POLICY_VERSION=1.0

# =============================================================================
# Timezone & Localization
# =============================================================================

# Timezone
TIMEZONE=UTC

# Default language
DEFAULT_LANGUAGE=en

# Supported locales
SUPPORTED_LOCALES=en,bn

# =============================================================================
# SECURITY NOTES
# =============================================================================

# üîê SECURITY CHECKLIST:
# [ ] Change all default passwords and secrets
# [ ] Use strong, unique SECRET_KEY (generate with: openssl rand -hex 32)
# [ ] Set proper CORS origins (no wildcards in production)
# [ ] Use HTTPS in production (set FORCE_HTTPS=true)
# [ ] Enable security headers (ENABLE_SECURITY_HEADERS=true)
# [ ] Use environment-specific database credentials
# [ ] Regularly rotate API keys and secrets
# [ ] Monitor logs for suspicious activity
# [ ] Keep dependencies updated
# [ ] Use proper file permissions (600) for this file

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# Development overrides
# Include .env.development for development-specific settings

# Staging overrides  
# Include .env.staging for staging-specific settings

# Production overrides
# Include .env.production for production-specific settings

# Local overrides (not committed to version control)
# Include .env.local for personal/machine-specific settings

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# Docker deployment:
# - Mount this file as volume or use Docker secrets
# - Use multi-stage builds to exclude development dependencies
# - Set proper resource limits and health checks

# Kubernetes deployment:
# - Use ConfigMaps for non-sensitive config
# - Use Secrets for sensitive values
# - Enable network policies and RBAC

# Cloud deployment:
# - Use managed databases and Redis when possible
# - Enable automatic backups and monitoring
# - Use load balancers and auto-scaling
# - Implement proper CI/CD pipelines

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues:
# - Database connection: Check DATABASE_URL and network connectivity
# - Redis issues: Verify REDIS_URL and Redis server status  
# - Payment errors: Validate Stripe/BTCPay credentials and webhooks
# - CORS errors: Check ALLOWED_ORIGINS configuration
# - Rate limiting: Verify Redis connection for rate limit storage
# - Email issues: Test SMTP settings and authentication

# Debug commands:
# - Test database: python -c "from app.database import engine; print(engine.execute('SELECT 1').scalar())"
# - Test Redis: python -c "import redis; r=redis.from_url('your_redis_url'); print(r.ping())"
# - Check config: python -c "from app.core.config import settings; print(settings)"